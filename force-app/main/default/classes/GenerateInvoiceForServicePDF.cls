public without sharing class GenerateInvoiceForServicePDF {

    @AuraEnabled
    public static String generateInvoicePDF(String recordId) {
        try {
            if (recordId != null) {
                List<WorkOrder> wrkOrders = [SELECT Id, CreatedDate FROM WorkOrder WHERE Id = :recordId];

                List<Cut_Of_Date__mdt> cutoffs = [SELECT ID, MasterLabel, date__c FROM Cut_Of_Date__mdt];

                if (!wrkOrders.isEmpty() && !cutoffs.isEmpty() ) {
                    WorkOrder wo = wrkOrders[0];

                    PageReference pdfPage;
                    if (wo.CreatedDate >= cutoffs[0].date__c) {
                        pdfPage = Page.Customer_Invoice_PDF;
                    } else {
                        pdfPage = Page.OldCustomer_Invoice_PDF;
                    }

                    pdfPage.getParameters().put('id', wo.Id);

                    Blob pdfBlob = pdfPage.getContentAsPDF();

                    Attachment pdfAttachment = new Attachment(
                        Name = 'CustomerInvoice_' + System.now().format('yyyyMMdd_HHmmss') + '.pdf',
                        Body = pdfBlob,
                        ContentType = 'application/pdf',
                        ParentId = wo.Id
                    );

                    insert pdfAttachment;

                    return 'success';
                }
            }
            return 'No WorkOrder found or invalid recordId';
        } catch (Exception e) {
            System.debug('Error ==> ' + e.getMessage() + ' Line Number: ' + e.getLineNumber());
            return 'Error: ' + e.getMessage();
        }
    }
}